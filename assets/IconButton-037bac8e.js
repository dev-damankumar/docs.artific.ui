import{j as e,V as n}from"./index-924a54cc.js";const i=s=>e.jsx(n,Object.assign({},s,{children:e.jsx("i",{className:"bx bxs-color-fill"})}));function t(s){const o=Object.assign({h1:"h1",p:"p",h2:"h2",pre:"pre",code:"code"},s.components);return e.jsxs(e.Fragment,{children:[e.jsx(o.h1,{children:"IconButtons"}),`
`,e.jsx(o.p,{children:"Icon Button are used to show icons in the form of button"}),`
`,`
`,e.jsx("div",{children:e.jsx("div",{name:"Default",children:i.bind({})})}),`
`,e.jsx(o.h2,{children:"API"}),`
`,e.jsx(o.pre,{children:e.jsx(o.code,{className:"language-jsx",children:`import { IconButton } from 'artific-ui/IconButton';
`})}),`
`,e.jsx(o.h2,{children:"IconButton Themes"}),`
`,e.jsxs(o.p,{children:["If you want to use a different theme for ",e.jsx(o.code,{children:"IconButton"})," use the ",e.jsx(o.code,{children:"theme"}),` prop to set the theme\r
Note: All components have basic four themes ie. (`,e.jsx(o.code,{children:"primary"}),"|",e.jsx(o.code,{children:"secondary"}),"|",e.jsx(o.code,{children:"dark"}),"|",e.jsx(o.code,{children:"light"}),"). you can use either of them."]}),`
`,e.jsx("div",{children:e.jsxs("div",{name:"IconButton Themes",children:[e.jsx(n,{theme:"primary",type:"button",children:e.jsx("i",{className:"bx bxs-color-fill"})}),e.jsx(n,{theme:"secondary",type:"button",children:e.jsx("i",{className:"bx bxs-color-fill"})}),e.jsx(n,{theme:"light",type:"button",children:e.jsx("i",{className:"bx bxs-color-fill"})}),e.jsx(n,{theme:"dark",type:"button",children:e.jsx("i",{className:"bx bxs-color-fill"})})]})}),`
`,e.jsx(o.h2,{children:"IconButton Variants"}),`
`,e.jsxs(o.p,{children:["Artific UI provides a ",e.jsx(o.code,{children:"variant"})," prop to make you choose how your component ui should look like"]}),`
`,e.jsxs(o.p,{children:["Set ",e.jsx(o.code,{children:"variant"})," prop with the value of (",e.jsx(o.code,{children:"default"}),"|",e.jsx(o.code,{children:"text"}),"|",e.jsx(o.code,{children:"outline"}),"). you can mix them with different supported ",e.jsx(o.code,{children:"theme"})," or ",e.jsx(o.code,{children:"layout"})]}),`
`,e.jsx(o.p,{children:`Note: Different components might have addition or different variant based on there configuration and flexibility.\r
you can check out the props table to see which variant is supported by the component`}),`
`,e.jsx("div",{children:e.jsxs("div",{name:"IconButton Variants",children:[e.jsx(n,{variant:"default",type:"button",children:e.jsx("i",{className:"bx bxs-color-fill"})}),e.jsx(n,{variant:"text",type:"button",children:e.jsx("i",{className:"bx bxs-color-fill"})}),e.jsx(n,{variant:"outline",type:"button",children:e.jsx("i",{className:"bx bxs-color-fill"})})]})}),`
`,e.jsx(o.h2,{children:"IconButton Layouts"}),`
`,e.jsx(o.p,{children:"IconButton Has basic four layouts to choose from to define how you component's structure should look like."}),`
`,e.jsxs(o.p,{children:["Set ",e.jsx(o.code,{children:"layout"})," prop with the value of (",e.jsx(o.code,{children:"default"}),"|",e.jsx(o.code,{children:"rounded"}),"|",e.jsx(o.code,{children:"no-radius"}),"|",e.jsx(o.code,{children:"pill"}),")"]}),`
`,e.jsxs(o.p,{children:[e.jsx(o.code,{children:"Note:"})," Different components might have addition layouts based on there configuration and flexibility. you can check out the props table to see which layout is supported by the component"]}),`
`,e.jsx("div",{children:e.jsxs("div",{name:"Button Layouts",children:[e.jsx(n,{layout:"default",type:"button",children:e.jsx("i",{className:"bx bxs-color-fill"})}),e.jsx(n,{layout:"rounded",type:"button",children:e.jsx("i",{className:"bx bxs-color-fill"})}),e.jsx(n,{layout:"pill",type:"button",children:e.jsx("i",{className:"bx bxs-color-fill"})}),e.jsx(n,{layout:"no-radius",type:"button",children:e.jsx("i",{className:"bx bxs-color-fill"})})]})}),`
`,e.jsx(o.h2,{children:"Sizes"}),`
`,e.jsxs(o.p,{children:["you can use a ",e.jsx(o.code,{children:"size"})," prop to define the size of your components"]}),`
`,e.jsxs(o.p,{children:["Set ",e.jsx(o.code,{children:"size"})," prop with the value of (",e.jsx(o.code,{children:"xs"}),"|",e.jsx(o.code,{children:"sm"}),"|",e.jsx(o.code,{children:"md"}),"|",e.jsx(o.code,{children:"lg"}),",",e.jsx(o.code,{children:"xl"}),"). you can mix them with different supported ",e.jsx(o.code,{children:"theme"})," or ",e.jsx(o.code,{children:"layout"})]}),`
`,e.jsxs(o.p,{children:["Note: Mostly all the components have the same size values ie.(",e.jsx(o.code,{children:"xs"}),"|",e.jsx(o.code,{children:"sm"}),"|",e.jsx(o.code,{children:"md"}),"|",e.jsx(o.code,{children:"lg"}),",",e.jsx(o.code,{children:"xl"}),"). but some of the components might have additional sizes."]}),`
`,e.jsx("div",{children:e.jsxs("div",{name:"Sizes",children:[e.jsx(n,{size:"xs",type:"button",children:e.jsx("i",{className:"bx bxs-color-fill"})}),e.jsx(n,{size:"sm",type:"button",children:e.jsx("i",{className:"bx bxs-color-fill"})}),e.jsx(n,{type:"button",children:e.jsx("i",{className:"bx bxs-color-fill"})}),e.jsx(n,{size:"lg",type:"button",children:e.jsx("i",{className:"bx bxs-color-fill"})}),e.jsx(n,{size:"xl",type:"button",children:e.jsx("i",{className:"bx bxs-color-fill"})})]})}),`
`,e.jsx(o.h2,{children:"Disabled IconButtons"}),`
`,e.jsxs(o.p,{children:["Use ",e.jsx(o.code,{children:"disabled"})," prop to make any button disable."]}),`
`,e.jsx("div",{children:e.jsxs("div",{name:"Disabled IconButtons",children:[e.jsx(n,{disabled:!0,type:"button",children:e.jsx("i",{className:"bx bxs-color-fill"})}),e.jsx(n,{disabled:!0,theme:"light",type:"button",children:e.jsx("i",{className:"bx bxs-color-fill"})}),e.jsx(n,{disabled:!0,theme:"dark",type:"button",children:e.jsx("i",{className:"bx bxs-color-fill"})})]})}),`
`,e.jsx(o.h2,{children:"Loading IconButtons"}),`
`,e.jsxs(o.p,{children:["When you click the button you can set it to loading state with the prop called ",e.jsx(o.code,{children:"loading"})]}),`
`,e.jsxs(o.p,{children:["also you can choose to hide the text of button when ",e.jsx(o.code,{children:"loading"})," is true, by setting with the ",e.jsx(o.code,{children:"hideTextOnLoading"})," props"]}),`
`,e.jsxs(o.p,{children:["also you can use ",e.jsx(o.code,{children:"loadingStyle:"})," (",e.jsx(o.code,{children:"spin"}),"|",e.jsx(o.code,{children:"grow"}),") to change the loading style."]}),`
`,e.jsxs(o.p,{children:["use ",e.jsx(o.code,{children:"loadingDirection"})," to set on with direction loader should appare."]}),`
`,e.jsx("div",{children:e.jsxs("div",{name:"Loading IconButtons",children:[e.jsx(n,{loading:!0,hideTextOnLoading:!0,loadingStyle:"spin",type:"button",children:e.jsx("i",{className:"bx bxs-color-fill"})}),e.jsx(n,{loading:!0,hideTextOnLoading:!0,loadingStyle:"grow",type:"button",children:e.jsx("i",{className:"bx bxs-color-fill"})}),e.jsx(n,{loading:!0,loadingStyle:"grow",type:"button",children:e.jsx("i",{className:"bx bxs-color-fill"})}),e.jsx(n,{loading:!0,loadingDirection:"after",type:"button",children:e.jsx("i",{className:"bx bxs-color-fill"})}),e.jsx(n,{loading:!0,loadingDirection:"after",loadingStyle:"grow",type:"button",children:e.jsx("i",{className:"bx bxs-color-fill"})})]})}),`
`,e.jsx(o.h2,{children:"Custom theme IconButtons"}),`
`,e.jsxs(o.p,{children:["If you want to use a different color scheme for ",e.jsx(o.code,{children:"Alert"}),` instead of the provided themes then you can use\r
`,e.jsx(o.code,{children:"colorScheme"})," props to define your color scheme."]}),`
`,e.jsxs(o.p,{children:["colorScheme is an object containing three properties: ",e.jsx(o.code,{children:"background"}),", ",e.jsx(o.code,{children:"backgroundColor"}),", ",e.jsx(o.code,{children:"color"})]}),`
`,e.jsx("div",{children:e.jsxs("div",{name:"Custom theme IconButtons",children:[e.jsx(n,{colorScheme:{background:"linear-gradient(45deg, #e736f4, #673ab7)",backgroundColor:"#e736f4",color:"white"},type:"button",children:e.jsx("i",{className:"bx bxs-color-fill"})}),e.jsx(n,{colorScheme:{background:"red",color:"white"},theme:"light",type:"button",children:e.jsx("i",{className:"bx bxs-color-fill"})}),e.jsx(n,{colorScheme:{background:"linear-gradient(45deg, #e736f4, #673ab7)",backgroundColor:"#e736f4",color:"white"},variant:"outline",type:"button",children:e.jsx("i",{className:"bx bxs-color-fill"})}),e.jsx(n,{colorScheme:{background:"red",color:"white"},variant:"outline",theme:"light",type:"button",children:e.jsx("i",{className:"bx bxs-color-fill"})})]})})]})}function c(s={}){const{wrapper:o}=s.components||{};return o?e.jsx(o,Object.assign({},s,{children:e.jsx(t,s)})):t(s)}export{c as default,i as defaultTemplate};
